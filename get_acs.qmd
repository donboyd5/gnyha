---
editor_options: 
  chunk_output_type: console
editor:
  markdown:
    canonical: true  
---

```{r}
#| label: setup

# library(conflicted)
detach("package:conflicted", unload = TRUE)
source("important_libraries.R")
# https://duckplyr.tidyverse.org/
library(dbplyr)
library(DBI)
library(RSQLite)
library(duckplyr)

# library(duckdb)
# # pak::pak("tidyverse/duckplyr")
# library(duckplyr)

DACS <- r"(D:\data\acs\5year\2023)"

```

```{r}
#| label: ONETIME-get-save-pus
#| eval: false

zfn <- "csv_pus.zip" # has a, b, c, d e.g., c is psam_pusc.csv
zpath <- fs::path(DACS, zfn)
zpath

fnames <- unzip(zpath, list = TRUE)$Name |> str_subset(".csv")
connections <- purrr::map(fnames, \(x) unz(zpath, x))
df <- vroom(connections, id = "fname")
count(df, fname)

df2 <- df |>
  rename_with(str_to_lower) |>
  mutate(fname = str_replace(fname, ".*:", ""))
count(df2, fname)

acsdb <- DBI::dbConnect(RSQLite::SQLite(), fs::path(DACS, "acs.sqlite"))
DBI::dbWriteTable(acsdb, "pus", df2)
DBI::dbListTables(acsdb)
DBI::dbExecute(acsdb, "ALTER TABLE pus RENAME TO pus_5year2023;")
DBI::dbDisconnect(acsdb)

path_duckdb <- fs::path(DACS, "acs.duckdb")
con <- DBI::dbConnect(duckdb::duckdb(path_duckdb))
DBI::dbWriteTable(con, "pus_5year2023", df2)
DBI::dbDisconnect(con)

con <- DBI::dbConnect(duckdb::duckdb(path_duckdb))
DBI::dbListTables(con)
DBI::dbExecute(con, "ALTER TABLE data RENAME TO pus_5year2023;")
DBI::dbDisconnect(con)

# renamed original files from Martin from td15.zip to td15_pw.zip (for password, etc.)
# gzpre <- "td"
# gzsfx <- ".zip"
# gzfiles <- paste0(gzpre, c(15, 21, 23), gzsfx)
# (gzpaths <- path(dtdfiles, gzfiles))

# use this when we have year on the data files, but not until then
# tctd <- open_dataset(
#   # sources = fs::path(dyfiles, "tax_microdata_2015.csv.gz"),
#   sources = gzpaths,
#   col_types = schema(ISBN = string()),
#   format = "csv"
# )
# count(tctd, FLPDYR) |> collect()

# df1 <- vroom(gzpaths, id = "fname")

```

```{r}
#| label: examine

# acsdb <- DBI::dbConnect(RSQLite::SQLite(), fs::path(DACS, "acs.sqlite"))
# DBI::dbListTables(acsdb)
# DBI::dbDisconnect(acsdb)

path_duckdb <- fs::path(DACS, "acs.duckdb")
acsduck <- DBI::dbConnect(duckdb::duckdb(path_duckdb))
DBI::dbListTables(acsduck)
# DBI::dbDisconnect(acsduck)

df <- tbl(acsduck, "pus_5year2023")
df

df |>
  explain()

count(df, fname)
colnames(df) |> sort()
glimpse(df)

df |>
  as_duckdb_tibble() |>
  explain()

nyacs <- df |>
  dplyr::filter(state == "36")
explain(nyacs)
soccodes <- count(nyacs, socp, sort = TRUE) |>
  as_duckdb_tibble() |>
  as_tibble()

nurses <- nyacs |>
  dplyr::filter(str_sub(socp, 1, 2) == "29") |>
  as_tibble()

tmp <- nurses |> dplyr::filter(socp == "291141") |> select(-c(pwgtp1:pwgtp80))
library(btools)
ns(tmp)
count(tmp, agep)

tmp |>
  count(agep) |>
  ggplot(aes(agep, n)) +
  geom_point() +
  scale_x_continuous(breaks = seq(0, 100, 5))

tmp |>
  dplyr::summarize(wtdn = sum(pwgtp), .by = agep) |>
  ggplot(aes(agep, wtdn)) +
  geom_point() +
  scale_x_continuous(breaks = seq(0, 100, 5)) +
  ggtitle("Weighted number of nurses in NY by age")

```