# Get GNYHA data

```{r}
#| label: packages

# install.packages("pak")
# pak::pak("r-lib/devtools")
# pak::pak("r-lib/usethis")
# pak::pak("r-lib/testthat")
# pak::pak("r-lib/rlang")
# pak::pak("r-lib/here")
# pak::pak("r-lib/rprojroot")
# remotes::install_github("ArcadeAntics/this.path")

library(rlang)
library(here)
library(this.path)
library(rprojroot)
library(fs)

library(tidyverse)
tprint <- 50 # default tibble print
options(tibble.print_max = tprint, tibble.print_min = tprint) # show up to tprint rows
library(readxl)
library(vroom)
library(skimr)
library(Hmisc)
library(gt)
# devtools::install_github("donboyd5/btools")
library(btools)

```

```{r}
#| label: locations

# non-robust way to find the quarto project root that will work interactively and during renders from terminal
# QROOT <- Sys.getenv("QUARTO_PROJECT_ROOT") # during project renders
# if (QROOT == "") {
#   QROOT <- this.path::this.dir()
# } # during interactive work

GROOT <- rprojroot::find_root(rprojroot::has_file(".git/index"))
DDATA <- fs::path(GROOT, "data")

```

## Get regions

Notes:

-   3 hospitals are in multiple regions but assigned to New York City:
-   7 hospitals have missing values for one year (2024) but not the other
-   5 hospitals with mismatch between 2023 and 2024 in code or name


```{r}

cnames <- c(
  "opcert_2023",
  "hosp_2023",
  "opcert_2024",
  "hosp_2024",
  "dolregion",
  "note"
)
regions <- read_excel(
  fs::path(DDATA, "ex35_data_f.xlsx"),
  sheet = "Region",
  col_names = cnames,
  col_types = "text",
  skip = 2
) |>
  mutate(across(where(is.character), ~ na_if(.x, "NA")))
glimpse(regions)
skim(regions)

```

### Examine region codes
```{r}
#| label: examine-regions
#| output: true
#| column: page

# notes
regions |>
  filter(!is.na(note))

# missing values
regions |>
  filter(if_any(c(opcert_2023, hosp_2023, opcert_2024, hosp_2024), is.na))

# different  values for 2023 and 2024
regions |>
  filter(opcert_2023 != opcert_2024 | hosp_2023 != hosp_2024)

```

## Get wage data

```{r}

# 2023
# Year	Operating Certificate	Hospital	Icr Line	Title	FTE Per Period	Hours in Working Week	Total Hours Paid	Total Overtime Hours	Adjusted Hours (col3-col4)	Total Payroll Paid	Total Overtime Paid	Adjusted Payroll (col6-col7)	Average Hourly Wage
# Year	OPCERT	hosp	LINE	title	col1	col2	col3	col4	col5	col6	col7	col8	col9

# 2024
# Year	Operating Certificate	Hospital	Icr Line	Title	FTE Per Period	Hours in Working Week	Total Hours Paid	Total Overtime Hours	Adjusted Hours (col3-col4)	Total Payroll Paid	Total Overtime Paid	Adjusted Payroll (col6-col7)	Average Hourly Wage
# Year	OPCERT	hosp	LINE	title	col1	col2	col3	col4	col5	col6	col7	col8	col9

cnames <- c(
  "year",
  "opcert",
  "hosp",
  "line",
  "title",
  "fte",
  "weeklyhours",
  "tothours",
  "othours",
  "adjhours",
  "payroll",
  "otpayroll",
  "adjpayroll",
  "avghourly"
)

f <- function(year) {
  df <- read_excel(
    fs::path(DDATA, "ex35_data_f.xlsx"),
    sheet = as.character(year),
    col_names = cnames,
    col_types = "text",
    skip = 5
  )
  df |>
    mutate(across(everything(), \(x) {
      ifelse(x %in% c("", "NA"), NA_character_, x)
    }))
}

wages1 <- purrr::map(2023:2024, f) |>
  list_rbind()

glimpse(wages1)
count(wages1, line)

```

### Examine wages

```{r}
#| output: true

skim(wages1)

```


```{r}
#| output: true

wages2 <- wages1 |>
  mutate(year = as.integer(year), line = as.integer(line)) |>
  mutate(across(c(fte:avghourly), as.numeric))

skim(wages2)

# Totals by occupation, sorted
wages2 |>
  summarise(
    tothours = sum(tothours, na.rm = TRUE),
    payroll = sum(payroll, na.rm = TRUE),
    .by = c(year, line, title)
  ) |>
  arrange(desc(tothours)) |>
  filter(year == 2024) |>
  mutate(
    hourspct = tothours / tothours[line == 40],
    paypct = payroll / payroll[line == 40]
  )

# sum of details by institution compared to totals
wages2 |>
  mutate(group = ifelse(line == 40, "total", "detail")) |>
  summarise(
    tothours = sum(tothours, na.rm = TRUE),
    payroll = sum(payroll, na.rm = TRUE),
    .by = c(year, opcert, hosp, group)
  ) |>
  pivot_longer(c(tothours, payroll)) |>
  pivot_wider(names_from = group) |>
  mutate(diff = detail - total, pdiff = diff / total) |>
  arrange(desc(abs(pdiff)))

# industry total payroll by occupation
wages2 |>
  summarise(
    payroll = sum(payroll, na.rm = TRUE),
    .by = c(year, line, title)
  ) |>
  pivot_wider(names_from = year, values_from = payroll) |>
  arrange(desc(`2024`))

```