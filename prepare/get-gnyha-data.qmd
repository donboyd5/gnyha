---
editor_options: 
  chunk_output_type: console
editor:
  markdown:
    canonical: true  
---

# Get GNYHA data

```{r}
#| label: packages

# install.packages("pak")
# pak::pak("r-lib/devtools")
# pak::pak("r-lib/usethis")
# pak::pak("r-lib/testthat")
# pak::pak("r-lib/rlang")
# pak::pak("r-lib/here")
# pak::pak("r-lib/rprojroot")
# remotes::install_github("ArcadeAntics/this.path")

library(rlang)
library(here)
library(this.path)
library(rprojroot)
library(fs)

library(tidyverse)
tprint <- 50 # default tibble print
options(tibble.print_max = tprint, tibble.print_min = tprint) # show up to tprint rows
library(readxl)
library(vroom)
library(skimr)
library(Hmisc)
library(gt)
# devtools::install_github("donboyd5/btools")
library(btools)

```

```{r}
#| label: locations

# non-robust way to find the quarto project root that will work interactively and during renders from terminal
# QROOT <- Sys.getenv("QUARTO_PROJECT_ROOT") # during project renders
# if (QROOT == "") {
#   QROOT <- this.path::this.dir()
# } # during interactive work

GROOT <- rprojroot::find_root(rprojroot::has_file(".git/index"))
DDATA <- fs::path(GROOT, "data")

```

## Get regions

Notes:

-   Three hospitals are in multiple regions but assigned to New York City:

![](images/paste-1.png)

-   Additionally...

```{r}

cnames <- c(
  "opcert_2023",
  "hosp_2023",
  "opcert_2024",
  "hosp_2024",
  "dolregion",
  "note"
)
regions <- read_excel(
  fs::path(DDATA, "ex35_data_f.xlsx"),
  sheet = "Region",
  col_names = cnames,
  col_types = "text",
  skip = 2
) |>
  mutate(across(where(is.character), ~ na_if(.x, "NA")))
glimpse(regions)
skim(regions)

```

### Examine region codes
```{r}
#| label: examine-regions
#| output: true

# notes
regions |>
  filter(!is.na(note))

# missing values
regions |>
  filter(if_any(c(opcert_2023, hosp_2023, opcert_2024, hosp_2024), is.na))

# different  values for 2023 and 2024
regions |>
  filter(opcert_2023 != opcert_2024 | hosp_2023 != hosp_2024)

```